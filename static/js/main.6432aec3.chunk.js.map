{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodoId","selectedTodoId","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","memo","selectedFilter","searchQuery","onSelectedFilter","onSearchQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onCloseModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","setSelectedTodoId","setSearchQuery","setSelectedFilter","visibleTodos","filter","searchSelect","isSearchQuery","toLowerCase","includes","selectedTodo","find","option","length","todoId","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,aACAC,EAHuC,EAGvCA,eAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAAI,UAAQ,OAAOF,UAAU,GAA7B,UACE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWK,IAAG,CACf,mBAAoBH,EAAKE,UACzB,mBAAoBF,EAAKE,YAF3B,SAKGF,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMV,EAAaI,EAAKC,KAJnC,SAME,sBAAMH,UAAU,OAAhB,SACE,mBAAGA,UAAWK,IACZ,MACA,CACE,SAAUH,EAAKC,KAAOJ,EACtB,eAAgBG,EAAKC,KAAOJ,wBCpDnCU,EAA8BC,gBAAK,gBAC9CC,EAD8C,EAC9CA,eACAC,EAF8C,EAE9CA,YACAC,EAH8C,EAG9CA,iBACAC,EAJ8C,EAI9CA,cAJ8C,OAM9C,uBAAMd,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRe,MAAOJ,EACPK,SAAU,SAAAC,GAAK,OAAIJ,EAAiBI,EAAMC,OAAOH,QAHnD,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGf,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVmB,YAAY,YACZJ,MAAOH,EACPI,SAAU,SAAAC,GAAK,OAAIH,EAAcG,EAAMC,OAAOH,UAGhD,sBAAMf,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdY,GACC,sBAAMZ,UAAU,gBAAgBoB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRd,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMM,EAAc,kBChD5BQ,G,MAAmB,kBAC9B,qBAAKtB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASuB,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICVMC,EAA6BxB,gBAAK,YAA6B,IAA1BR,EAAyB,EAAzBA,KAAMiC,EAAmB,EAAnBA,aACtD,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,qBAAU,WDSW,IAACC,KCRZtC,EAAKsC,ODQ0BjB,EAAG,iBAAiBiB,KCPxDV,KAAKQ,KACP,IAGD,sBAAKtC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbqC,EAGA,sBAAKrC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYE,EAAKC,MAIjB,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS2B,OAIb,sBAAKnC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGE,EAAKI,QAGR,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEGE,EAAKE,UACD,wBAAQJ,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEJ,OAED,mBAAGyC,KAAI,iBAAYJ,EAAKK,OAAxB,SACGL,EAAKM,gBAlCd,cAAC,EAAD,UCZKC,EAAgB,WAC3B,MAA0BR,mBAAiB,IAA3C,mBAAOvC,EAAP,KAAcgD,EAAd,KACA,EAA4CT,mBAAS,GAArD,mBAAOrC,EAAP,KAAuB+C,EAAvB,KAEA,EAAsCV,mBAAS,IAA/C,mBAAOxB,EAAP,KAAoBmC,EAApB,KACA,EAA4CX,mBAAS,OAArD,mBAAOzB,EAAP,KAAuBqC,EAAvB,KAEAT,qBAAU,WFEkBhB,EAAY,UEAnCO,MAAK,SAAA5B,GAAI,OAAI2C,EAAS3C,QACxB,IAEH,IAIM+C,EAAepD,EAAMqD,QAAO,SAAAhD,GAChC,IAEIiD,EAFEC,EAAgBlD,EAAKI,MAAM+C,cAAcC,SAAS1C,EAAYyC,eAIpE,OAAQ1C,GACN,IAAK,YACHwC,EAAejD,EAAKE,UACpB,MAEF,IAAK,SACH+C,GAAgBjD,EAAKE,UACrB,MAEF,IAAK,MACH,OAAOgD,EAMX,OAAOA,GAAiBD,KAGpBI,EAAeN,EAAaO,MAChC,SAAAtD,GAAI,OAAIA,EAAKC,KAAOJ,KAGtB,OACE,qCACE,qBAAKC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAACS,EAAD,CACEE,eAAgBA,EAChBC,YAAaA,EACbC,iBAAkB,SAAC4C,GAAD,OAAYT,EAAkBS,IAChD3C,cAAe,SAACR,GAAD,OAAWyC,EAAezC,QAI7C,qBAAKN,UAAU,QAAf,SACGH,EAAM6D,OAAS,EAEZ,cAAC,EAAD,CACE7D,MAAOoD,EACPnD,aAAc,SAAC6D,GAAD,OAAYb,EAAkBa,IAC5C5D,eAAgBA,IAGlB,cAAC,EAAD,aAMXwD,GACC,cAACrB,EAAD,CAAWC,aAhEM,WACrBW,EAAkB,IA+D2B5C,KAAMqD,QCrFvDK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6432aec3.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectTodoId: (todoid: number) => void,\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodoId,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodoId(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={cn(\n                  'far',\n                  {\n                    'fa-eye': todo.id !== selectedTodoId,\n                    'fa-eye-slash': todo.id === selectedTodoId,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","import React, { memo } from 'react';\n\ntype Props = {\n  selectedFilter: string;\n  searchQuery: string;\n  onSelectedFilter: (selectedFilter: string) => void,\n  onSearchQuery: (searchQuery: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = memo(({\n  selectedFilter,\n  searchQuery,\n  onSelectedFilter,\n  onSearchQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectedFilter}\n          onChange={event => onSelectedFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchQuery}\n        onChange={event => onSearchQuery(event.target.value)}\n      />\n\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {searchQuery && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onSearchQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n));\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { memo, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  onCloseModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = memo(({ todo, onCloseModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState('all');\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => setTodos(todo));\n  }, []);\n\n  const closeTodoModal = () => {\n    setSelectedTodoId(0);\n  };\n\n  const visibleTodos = todos.filter(todo => {\n    const isSearchQuery = todo.title.toLowerCase().includes(searchQuery.toLowerCase());\n\n    let searchSelect;\n\n    switch (selectedFilter) {\n      case 'completed':\n        searchSelect = todo.completed;\n        break;\n\n      case 'active':\n        searchSelect = !todo.completed;\n        break;\n\n      case 'all':\n        return isSearchQuery;\n\n      default:\n        break;\n    }\n\n    return isSearchQuery && searchSelect;\n  });\n\n  const selectedTodo = visibleTodos.find(\n    todo => todo.id === selectedTodoId,\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedFilter={selectedFilter}\n                searchQuery={searchQuery}\n                onSelectedFilter={(option) => setSelectedFilter(option)}\n                onSearchQuery={(title) => setSearchQuery(title)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodoId={(todoId) => setSelectedTodoId(todoId)}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )\n                : <Loader /> }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal onCloseModal={closeTodoModal} todo={selectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}